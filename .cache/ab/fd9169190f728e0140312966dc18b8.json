{"id":"node_modules/write-file-atomic/index.js","dependencies":[{"name":"G:\\Documents\\Added in Translation\\package.json","includedInParent":true,"mtime":1551935963044},{"name":"G:\\Documents\\Added in Translation\\node_modules\\write-file-atomic\\package.json","includedInParent":true,"mtime":1551934537383},{"name":"graceful-fs","loc":{"line":6,"column":17},"parent":"G:\\Documents\\Added in Translation\\node_modules\\write-file-atomic\\index.js","resolved":"G:\\Documents\\Added in Translation\\node_modules\\graceful-fs\\graceful-fs.js"},{"name":"slide","loc":{"line":7,"column":20},"parent":"G:\\Documents\\Added in Translation\\node_modules\\write-file-atomic\\index.js","resolved":"G:\\Documents\\Added in Translation\\node_modules\\slide\\lib\\slide.js"},{"name":"imurmurhash","loc":{"line":8,"column":26},"parent":"G:\\Documents\\Added in Translation\\node_modules\\write-file-atomic\\index.js","resolved":"G:\\Documents\\Added in Translation\\node_modules\\imurmurhash\\imurmurhash.js"},{"name":"util","loc":{"line":9,"column":38},"parent":"G:\\Documents\\Added in Translation\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\bigfat\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\util\\util.js"},{"name":"process","parent":"G:\\Documents\\Added in Translation\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\bigfat\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\process\\browser.js"},{"name":"buffer","parent":"G:\\Documents\\Added in Translation\\node_modules\\write-file-atomic\\index.js","resolved":"C:\\Users\\bigfat\\AppData\\Roaming\\npm\\node_modules\\parcel\\node_modules\\buffer\\index.js"}],"generated":{"js":"var __filename = \"G:\\\\Documents\\\\Added in Translation\\\\node_modules\\\\write-file-atomic\\\\index.js\";\nvar process = require(\"process\");\nvar Buffer = require(\"buffer\").Buffer;\n'use strict'\nmodule.exports = writeFile\nmodule.exports.sync = writeFileSync\nmodule.exports._getTmpname = getTmpname // for testing\n\nvar fs = require('graceful-fs')\nvar chain = require('slide').chain\nvar MurmurHash3 = require('imurmurhash')\nvar extend = Object.assign || require('util')._extend\n\nvar invocations = 0\nfunction getTmpname (filename) {\n  return filename + '.' +\n    MurmurHash3(__filename)\n      .hash(String(process.pid))\n      .hash(String(++invocations))\n      .result()\n}\n\nfunction writeFile (filename, data, options, callback) {\n  if (options instanceof Function) {\n    callback = options\n    options = null\n  }\n  if (!options) options = {}\n  fs.realpath(filename, function (_, realname) {\n    _writeFile(realname || filename, data, options, callback)\n  })\n}\nfunction _writeFile (filename, data, options, callback) {\n  var tmpfile = getTmpname(filename)\n\n  if (options.mode && options.chown) {\n    return thenWriteFile()\n  } else {\n    // Either mode or chown is not explicitly set\n    // Default behavior is to copy it from original file\n    return fs.stat(filename, function (err, stats) {\n      if (err || !stats) return thenWriteFile()\n\n      options = extend({}, options)\n      if (!options.mode) {\n        options.mode = stats.mode\n      }\n      if (!options.chown && process.getuid) {\n        options.chown = { uid: stats.uid, gid: stats.gid }\n      }\n      return thenWriteFile()\n    })\n  }\n\n  function thenWriteFile () {\n    chain([\n      [writeFileAsync, tmpfile, data, options.mode, options.encoding || 'utf8'],\n      options.chown && [fs, fs.chown, tmpfile, options.chown.uid, options.chown.gid],\n      options.mode && [fs, fs.chmod, tmpfile, options.mode],\n      [fs, fs.rename, tmpfile, filename]\n    ], function (err) {\n      err ? fs.unlink(tmpfile, function () { callback(err) })\n        : callback()\n    })\n  }\n\n  // doing this instead of `fs.writeFile` in order to get the ability to\n  // call `fsync`.\n  function writeFileAsync (file, data, mode, encoding, cb) {\n    fs.open(file, 'w', options.mode, function (err, fd) {\n      if (err) return cb(err)\n      if (Buffer.isBuffer(data)) {\n        return fs.write(fd, data, 0, data.length, 0, syncAndClose)\n      } else if (data != null) {\n        return fs.write(fd, String(data), 0, String(encoding), syncAndClose)\n      } else {\n        return syncAndClose()\n      }\n      function syncAndClose (err) {\n        if (err) return cb(err)\n        fs.fsync(fd, function (err) {\n          if (err) return cb(err)\n          fs.close(fd, cb)\n        })\n      }\n    })\n  }\n}\n\nfunction writeFileSync (filename, data, options) {\n  if (!options) options = {}\n  try {\n    filename = fs.realpathSync(filename)\n  } catch (ex) {\n    // it's ok, it'll happen on a not yet existing file\n  }\n  var tmpfile = getTmpname(filename)\n\n  try {\n    if (!options.mode || !options.chown) {\n      // Either mode or chown is not explicitly set\n      // Default behavior is to copy it from original file\n      try {\n        var stats = fs.statSync(filename)\n        options = extend({}, options)\n        if (!options.mode) {\n          options.mode = stats.mode\n        }\n        if (!options.chown && process.getuid) {\n          options.chown = { uid: stats.uid, gid: stats.gid }\n        }\n      } catch (ex) {\n        // ignore stat errors\n      }\n    }\n\n    var fd = fs.openSync(tmpfile, 'w', options.mode)\n    if (Buffer.isBuffer(data)) {\n      fs.writeSync(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      fs.writeSync(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n    fs.fsyncSync(fd)\n    fs.closeSync(fd)\n    if (options.chown) fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n    if (options.mode) fs.chmodSync(tmpfile, options.mode)\n    fs.renameSync(tmpfile, filename)\n  } catch (err) {\n    try { fs.unlinkSync(tmpfile) } catch (e) {}\n    throw err\n  }\n}\n","map":{"mappings":[{"source":"node_modules/write-file-atomic/index.js","original":{"line":1,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":2,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":3,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":6,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":8,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":9,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":10,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":11,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":12,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":13,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":14,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":15,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":17,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":18,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":19,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":21,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":22,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":23,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":24,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":25,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":26,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":27,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":28,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":29,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":30,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":31,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":32,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":33,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":34,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":35,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":36,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":37,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":38,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":39,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":40,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":41,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":42,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":43,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":44,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":45,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":46,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":47,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":48,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":49,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":50,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":51,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":52,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":53,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":54,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":55,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":56,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":57,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":58,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":59,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":60,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":61,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":62,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":63,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":64,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":65,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":66,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":67,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":68,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":69,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":70,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":71,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":72,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":73,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":74,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":75,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":76,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":77,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":78,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":79,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":80,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":81,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":82,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":83,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":84,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":85,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":86,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":87,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":88,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":89,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":90,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":91,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":92,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":93,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":94,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":95,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":96,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":97,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":98,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":99,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":100,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":101,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":102,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":103,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":104,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":105,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":106,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":107,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":108,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":109,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":110,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":111,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":112,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":113,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":114,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":115,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":116,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":117,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":118,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":119,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":120,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":121,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":122,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":123,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":124,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":125,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":126,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":127,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":128,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":129,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/write-file-atomic/index.js","original":{"line":130,"column":0},"generated":{"line":133,"column":0}}],"sources":{"node_modules/write-file-atomic/index.js":"'use strict'\nmodule.exports = writeFile\nmodule.exports.sync = writeFileSync\nmodule.exports._getTmpname = getTmpname // for testing\n\nvar fs = require('graceful-fs')\nvar chain = require('slide').chain\nvar MurmurHash3 = require('imurmurhash')\nvar extend = Object.assign || require('util')._extend\n\nvar invocations = 0\nfunction getTmpname (filename) {\n  return filename + '.' +\n    MurmurHash3(__filename)\n      .hash(String(process.pid))\n      .hash(String(++invocations))\n      .result()\n}\n\nfunction writeFile (filename, data, options, callback) {\n  if (options instanceof Function) {\n    callback = options\n    options = null\n  }\n  if (!options) options = {}\n  fs.realpath(filename, function (_, realname) {\n    _writeFile(realname || filename, data, options, callback)\n  })\n}\nfunction _writeFile (filename, data, options, callback) {\n  var tmpfile = getTmpname(filename)\n\n  if (options.mode && options.chown) {\n    return thenWriteFile()\n  } else {\n    // Either mode or chown is not explicitly set\n    // Default behavior is to copy it from original file\n    return fs.stat(filename, function (err, stats) {\n      if (err || !stats) return thenWriteFile()\n\n      options = extend({}, options)\n      if (!options.mode) {\n        options.mode = stats.mode\n      }\n      if (!options.chown && process.getuid) {\n        options.chown = { uid: stats.uid, gid: stats.gid }\n      }\n      return thenWriteFile()\n    })\n  }\n\n  function thenWriteFile () {\n    chain([\n      [writeFileAsync, tmpfile, data, options.mode, options.encoding || 'utf8'],\n      options.chown && [fs, fs.chown, tmpfile, options.chown.uid, options.chown.gid],\n      options.mode && [fs, fs.chmod, tmpfile, options.mode],\n      [fs, fs.rename, tmpfile, filename]\n    ], function (err) {\n      err ? fs.unlink(tmpfile, function () { callback(err) })\n        : callback()\n    })\n  }\n\n  // doing this instead of `fs.writeFile` in order to get the ability to\n  // call `fsync`.\n  function writeFileAsync (file, data, mode, encoding, cb) {\n    fs.open(file, 'w', options.mode, function (err, fd) {\n      if (err) return cb(err)\n      if (Buffer.isBuffer(data)) {\n        return fs.write(fd, data, 0, data.length, 0, syncAndClose)\n      } else if (data != null) {\n        return fs.write(fd, String(data), 0, String(encoding), syncAndClose)\n      } else {\n        return syncAndClose()\n      }\n      function syncAndClose (err) {\n        if (err) return cb(err)\n        fs.fsync(fd, function (err) {\n          if (err) return cb(err)\n          fs.close(fd, cb)\n        })\n      }\n    })\n  }\n}\n\nfunction writeFileSync (filename, data, options) {\n  if (!options) options = {}\n  try {\n    filename = fs.realpathSync(filename)\n  } catch (ex) {\n    // it's ok, it'll happen on a not yet existing file\n  }\n  var tmpfile = getTmpname(filename)\n\n  try {\n    if (!options.mode || !options.chown) {\n      // Either mode or chown is not explicitly set\n      // Default behavior is to copy it from original file\n      try {\n        var stats = fs.statSync(filename)\n        options = extend({}, options)\n        if (!options.mode) {\n          options.mode = stats.mode\n        }\n        if (!options.chown && process.getuid) {\n          options.chown = { uid: stats.uid, gid: stats.gid }\n        }\n      } catch (ex) {\n        // ignore stat errors\n      }\n    }\n\n    var fd = fs.openSync(tmpfile, 'w', options.mode)\n    if (Buffer.isBuffer(data)) {\n      fs.writeSync(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      fs.writeSync(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n    fs.fsyncSync(fd)\n    fs.closeSync(fd)\n    if (options.chown) fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n    if (options.mode) fs.chmodSync(tmpfile, options.mode)\n    fs.renameSync(tmpfile, filename)\n  } catch (err) {\n    try { fs.unlinkSync(tmpfile) } catch (e) {}\n    throw err\n  }\n}\n"},"lineCount":133}},"hash":"a5e7693780e39c4da80b4ee80a34dd41","cacheData":{"env":{}}}